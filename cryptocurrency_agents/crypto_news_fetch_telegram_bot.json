{
    "name": "Crypto News TG Bot",
    "flow": [
        {
            "id": 1,
            "module": "http:ActionSendData",
            "version": 3,
            "parameters": {
                "handleErrors": true,
                "useNewZLibDeCompress": true
            },
            "mapper": {
                "ca": "",
                "qs": [],
                "url": "https://thenewscrypto.com/editors-news/",
                "data": "",
                "gzip": true,
                "method": "get",
                "headers": [],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "raw",
                "contentType": "text/html",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
            },
            "metadata": {
                "designer": {
                    "x": 0,
                    "y": 150
                },
                "restore": {
                    "expect": {
                        "qs": {
                            "mode": "chose"
                        },
                        "method": {
                            "mode": "chose",
                            "label": "GET"
                        },
                        "headers": {
                            "mode": "chose"
                        },
                        "bodyType": {
                            "label": "Raw"
                        },
                        "contentType": {
                            "label": "HTML (text/html)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                    },
                    {
                        "name": "useNewZLibDeCompress",
                        "type": "hidden"
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "serializeUrl",
                        "type": "boolean",
                        "label": "Serialize URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "get",
                                "head",
                                "post",
                                "put",
                                "patch",
                                "delete",
                                "options"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "spec": [
                            {
                                "name": "name",
                                "type": "text",
                                "label": "Name",
                                "required": true
                            },
                            {
                                "name": "value",
                                "type": "text",
                                "label": "Value"
                            }
                        ],
                        "type": "array",
                        "label": "Headers"
                    },
                    {
                        "name": "qs",
                        "spec": [
                            {
                                "name": "name",
                                "type": "text",
                                "label": "Name",
                                "required": true
                            },
                            {
                                "name": "value",
                                "type": "text",
                                "label": "Value"
                            }
                        ],
                        "type": "array",
                        "label": "Query String"
                    },
                    {
                        "name": "bodyType",
                        "type": "select",
                        "label": "Body type",
                        "validate": {
                            "enum": [
                                "raw",
                                "x_www_form_urlencoded",
                                "multipart_form_data"
                            ]
                        }
                    },
                    {
                        "name": "parseResponse",
                        "type": "boolean",
                        "label": "Parse response",
                        "required": true
                    },
                    {
                        "name": "authUser",
                        "type": "text",
                        "label": "User name"
                    },
                    {
                        "name": "authPass",
                        "type": "password",
                        "label": "Password"
                    },
                    {
                        "name": "timeout",
                        "type": "uinteger",
                        "label": "Timeout",
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    },
                    {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                    },
                    {
                        "name": "ca",
                        "type": "cert",
                        "label": "Self-signed certificate"
                    },
                    {
                        "name": "rejectUnauthorized",
                        "type": "boolean",
                        "label": "Reject connections that are using unverified (self-signed) certificates",
                        "required": true
                    },
                    {
                        "name": "followRedirect",
                        "type": "boolean",
                        "label": "Follow redirect",
                        "required": true
                    },
                    {
                        "name": "useQuerystring",
                        "type": "boolean",
                        "label": "Disable serialization of multiple same query string keys as arrays",
                        "required": true
                    },
                    {
                        "name": "gzip",
                        "type": "boolean",
                        "label": "Request compressed content",
                        "required": true
                    },
                    {
                        "name": "useMtls",
                        "type": "boolean",
                        "label": "Use Mutual TLS",
                        "required": true
                    },
                    {
                        "name": "contentType",
                        "type": "select",
                        "label": "Content type",
                        "validate": {
                            "enum": [
                                "text/plain",
                                "application/json",
                                "application/xml",
                                "text/xml",
                                "text/html",
                                "custom"
                            ]
                        }
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Request content"
                    },
                    {
                        "name": "followAllRedirects",
                        "type": "boolean",
                        "label": "Follow all redirect",
                        "required": true
                    }
                ]
            },
            "onerror": [
                {
                    "id": 14,
                    "module": "telegram:SendReplyMessage",
                    "version": 1,
                    "parameters": {
                        "__IMTCONN__": 5997253
                    },
                    "mapper": {
                        "text": "Sorry. No updates could be fetched.",
                        "chatId": "@cryptovengergroup",
                        "parseMode": "",
                        "replyMarkup": "",
                        "messageThreadId": "",
                        "replyToMessageId": "",
                        "replyMarkupAssembleType": "reply_markup_enter"
                    },
                    "metadata": {
                        "designer": {
                            "x": 300,
                            "y": 300
                        },
                        "restore": {
                            "expect": {
                                "parseMode": {
                                    "label": "Empty"
                                },
                                "disableNotification": {
                                    "mode": "chose"
                                },
                                "replyMarkupAssembleType": {
                                    "label": "Enter the Reply Markup"
                                }
                            },
                            "parameters": {
                                "__IMTCONN__": {
                                    "data": {
                                        "scoped": "true",
                                        "connection": "telegram"
                                    },
                                    "label": "My Telegram Bot connection"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "name": "__IMTCONN__",
                                "type": "account:telegram",
                                "label": "Connection",
                                "required": true
                            }
                        ],
                        "expect": [
                            {
                                "name": "chatId",
                                "type": "text",
                                "label": "Chat ID",
                                "required": true
                            },
                            {
                                "name": "text",
                                "type": "text",
                                "label": "Text",
                                "required": true
                            },
                            {
                                "name": "messageThreadId",
                                "type": "number",
                                "label": "Message Thread ID"
                            },
                            {
                                "name": "parseMode",
                                "type": "select",
                                "label": "Parse Mode",
                                "validate": {
                                    "enum": [
                                        "Markdown",
                                        "HTML"
                                    ]
                                }
                            },
                            {
                                "name": "disableNotification",
                                "type": "boolean",
                                "label": "Disable Notifications"
                            },
                            {
                                "name": "disableWebPagePreview",
                                "type": "boolean",
                                "label": "Disable Link Previews"
                            },
                            {
                                "name": "replyToMessageId",
                                "type": "number",
                                "label": "Original Message ID"
                            },
                            {
                                "name": "replyMarkupAssembleType",
                                "type": "select",
                                "label": "Enter/Assemble the Reply Markup Field",
                                "validate": {
                                    "enum": [
                                        "reply_markup_enter",
                                        "reply_markup_assemble"
                                    ]
                                }
                            },
                            {
                                "name": "replyMarkup",
                                "type": "text",
                                "label": "Reply Markup"
                            }
                        ]
                    }
                },
                {
                    "id": 13,
                    "module": "builtin:Ignore",
                    "version": 1,
                    "metadata": {
                        "designer": {
                            "x": 600,
                            "y": 300
                        }
                    }
                }
            ]
        },
        {
            "id": 9,
            "module": "regexp:Parser",
            "version": 1,
            "parameters": {
                "global": true,
                "pattern": "fs-17\\\"\\>\\<a\\s+href=\\\"(.*)\\\"\\srel",
                "multiline": false,
                "sensitive": true,
                "singleline": false,
                "continueWhenNoRes": true,
                "ignoreInfiniteLoopsWhenGlobal": false
            },
            "mapper": {
                "text": "{{1.data}}"
            },
            "metadata": {
                "designer": {
                    "x": 300,
                    "y": 0
                },
                "restore": {},
                "parameters": [
                    {
                        "name": "pattern",
                        "type": "text",
                        "label": "Pattern",
                        "required": true
                    },
                    {
                        "name": "global",
                        "type": "boolean",
                        "label": "Global match",
                        "required": true
                    },
                    {
                        "name": "sensitive",
                        "type": "boolean",
                        "label": "Case sensitive",
                        "required": true
                    },
                    {
                        "name": "multiline",
                        "type": "boolean",
                        "label": "Multiline",
                        "required": true
                    },
                    {
                        "name": "singleline",
                        "type": "boolean",
                        "label": "Singleline",
                        "required": true
                    },
                    {
                        "name": "continueWhenNoRes",
                        "type": "boolean",
                        "label": "Continue the execution of the route even if the module finds no matches",
                        "required": true
                    },
                    {
                        "name": "ignoreInfiniteLoopsWhenGlobal",
                        "type": "boolean",
                        "label": "Ignore errors when there is an infinite search loop",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "interface": [
                    {
                        "name": "$1",
                        "type": "text",
                        "label": "$1"
                    },
                    {
                        "name": "i",
                        "type": "uinteger",
                        "label": "i"
                    },
                    {
                        "name": "__IMTMATCH__",
                        "type": "any",
                        "label": "Fallback Match"
                    }
                ]
            }
        },
        {
            "id": 10,
            "module": "util:TextAggregator",
            "version": 1,
            "parameters": {
                "feeder": 9,
                "rowSeparator": "\n"
            },
            "mapper": {
                "value": "{{9.`$1`}}"
            },
            "metadata": {
                "designer": {
                    "x": 600,
                    "y": 0
                },
                "restore": {
                    "extra": {
                        "feeder": {
                            "label": "Text parser - Match pattern [9]"
                        }
                    },
                    "parameters": {
                        "rowSeparator": {
                            "label": "New row"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "rowSeparator",
                        "type": "select",
                        "label": "Row separator",
                        "validate": {
                            "enum": [
                                "\n",
                                "\t",
                                "other"
                            ]
                        }
                    }
                ],
                "expect": [
                    {
                        "name": "value",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "advanced": true
            },
            "flags": {
                "stopIfEmpty": true
            }
        },
        {
            "id": 11,
            "module": "telegram:SendReplyMessage",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 5997253
            },
            "mapper": {
                "text": "{{10.text}}",
                "chatId": "@cryptovengergroup",
                "parseMode": "",
                "replyMarkup": "",
                "messageThreadId": "",
                "replyToMessageId": "",
                "replyMarkupAssembleType": "reply_markup_enter"
            },
            "metadata": {
                "designer": {
                    "x": 900,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "parseMode": {
                            "label": "Empty"
                        },
                        "disableNotification": {
                            "mode": "chose"
                        },
                        "replyMarkupAssembleType": {
                            "label": "Enter the Reply Markup"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "telegram"
                            },
                            "label": "My Telegram Bot connection"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:telegram",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "chatId",
                        "type": "text",
                        "label": "Chat ID",
                        "required": true
                    },
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text",
                        "required": true
                    },
                    {
                        "name": "messageThreadId",
                        "type": "number",
                        "label": "Message Thread ID"
                    },
                    {
                        "name": "parseMode",
                        "type": "select",
                        "label": "Parse Mode",
                        "validate": {
                            "enum": [
                                "Markdown",
                                "HTML"
                            ]
                        }
                    },
                    {
                        "name": "disableNotification",
                        "type": "boolean",
                        "label": "Disable Notifications"
                    },
                    {
                        "name": "disableWebPagePreview",
                        "type": "boolean",
                        "label": "Disable Link Previews"
                    },
                    {
                        "name": "replyToMessageId",
                        "type": "number",
                        "label": "Original Message ID"
                    },
                    {
                        "name": "replyMarkupAssembleType",
                        "type": "select",
                        "label": "Enter/Assemble the Reply Markup Field",
                        "validate": {
                            "enum": [
                                "reply_markup_enter",
                                "reply_markup_assemble"
                            ]
                        }
                    },
                    {
                        "name": "replyMarkup",
                        "type": "text",
                        "label": "Reply Markup"
                    }
                ]
            }
        }
    ],
    "metadata": {
        "instant": false,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": []
        },
        "zone": "eu2.make.com",
        "notes": []
    }
}